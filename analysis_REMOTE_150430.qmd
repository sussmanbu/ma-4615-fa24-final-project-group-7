---
title: Analysis
description: Here we provide a detailed analysis using more sophisticated statistics techniques.
toc: true
draft: false
runtime: shiny
---

![](images/analysis.jpg)

### Loading Datasets and Libraries.

```{r}
suppressPackageStartupMessages(library(tidymodels))
suppressPackageStartupMessages(library(reshape2)) #For models
suppressPackageStartupMessages(library(ggplot2)) #For plots
suppressPackageStartupMessages(library(shiny))
suppressPackageStartupMessages(library(shinylive)) #For interactive plots
suppressPackageStartupMessages(library(readr)) # For reading .rds files
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(tidyverse)) #For data wrangling, manipulation, etc.
suppressPackageStartupMessages(library(viridis)) #For visual themes
suppressPackageStartupMessages(library(sf)) 
suppressPackageStartupMessages(library(maps)) #For maps
suppressPackageStartupMessages(library(DT))

police_interaction <- read_rds(here::here("dataset/police_interaction.rds"))
firearm_ds <- read_rds(here::here("dataset/firearm_sh_ds.rds"))

combined_regional_ds <- read_rds(here::here("dataset/combined_regional_data.rds"))
```

### Police Interation Data Analysis

#### Proper Conduct
The first step of our EDA involves examining the "PROPER" variable, a binary variable which displays whether or not the police behaved properly during each interaction. This binary variable is reported for 19,321 of the 105,273 total cases, with 1,853 reported cases of the police behaving improperly and 17,468 cases of the police reporting properly. Here, we see how the proportion of improper police actions differs among different race populations. 

```{r}
police_interaction |>
  filter(!is.na(PROPER)) |>
  group_by(RACE) |>
  summarize(
    improper_proportion = sum(PROPER == 0) / n()
  ) |>
  ggplot(aes(x = RACE, y = improper_proportion, fill = RACE)) +
  geom_bar(stat = "identity") + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
The plot shows that the "Black, Non-Hispanic" population experienced a much higher proportion of improper police interactions than all other populations, with about 15% of reported interactions classified as improper. Among "Hispanic" and "Other or multiracial, Non-Hispanic" populations, the proportion of improper police interacts was about 10%, while the rate of improper police interactions among members of the "White, Non-Hispanic" population was about 7%.

In making this observation it is important to note that the numbers could be skewed due to the number of responses recieved for each group, and also the nature with which the data was collected as a survey. Which may prompt those who felt racially discriminated against to be more likely to reply to the survey in the first place. 

#### Modeling

For data modeling, we decided to split the data into two. 80% of the data was randomly selected for the training dataset, and 20% was randomly selected for the testing dataset. The model attempts to predict whether someone would be arrested based on their race, years of education, if their household is living in poverty, and their gender. 

```{r Training Summary:}
# Split data
split <- initial_split(police_interaction, prop = .8)

# Splits
training<- training(split)
testing <- testing(split)

# Filter out some bad rows
filtered_training_data <- training |>
  filter(!is.na(ARRESTED) & !is.na(RACE) & !is.na(EDUCATION) & !is.na(HHPOV) & !is.na(MALE))
filtered_testing_data <- testing |>
  filter(!is.na(ARRESTED) & !is.na(RACE) & !is.na(EDUCATION) & !is.na(HHPOV) & !is.na(MALE))

# Train model
model <- lm(ARRESTED ~ RACE + EDUCATION + HHPOV + MALE, filtered_training_data)

summary(model)
```

We note that it is not necessary to actually test our model as it will not be used to make predictions, but instead to simply example the relationship between the predictors and the ARRESTED metric.

The summary of this model denotes that there are very small p-values associated with the predicters. This means there is significant evidence that the predictors of our model have an effect on the likelihood of being arrested. 

From the model summary we actually notice that between the difference races there is not much difference in their relationship with being arrested. However we see that there is a strong correlation for the Education, Household Poverty, and Gender of the individual involved in the police interaction. The model shows that those who are less educated are more likely to be arrested, alongside those from lower household incomes, and individuals who are males. 

### Firearm Proxy Dataset

We added another dataset that describes the number of homicides, the number of suicides, and the number of suicides done with firearms for whites & nonwhites within different states from 1949 to 2020.

This map represents the rate of homicides by firearm by state. There are different levels of colors to represent the homicide rate by state, and the diagrams are split into 2002, 2008, and 2011.

```{r}
firearm_ds <- firearm_ds |>
  mutate(firearm_homicide_rate = as.numeric(firearm_homicide_rate),
         state = tolower(state)) |>
  filter(!is.na(firearm_homicide_rate))

us_states <- st_as_sf(maps::map("state", plot = FALSE, fill = TRUE)) %>%
  mutate(region = tolower(ID)) %>% # Convert state names to lowercase
  select(region, geom) # Retain only state name and geometry columns


map_data <- us_states |>
  rename(state = region) |>
  left_join(firearm_ds, by = "state")

map_data$log_firearm_homicide_rate <- log(map_data$firearm_homicide_rate + 1)
 
ggplot(map_data) +
  geom_sf(aes(fill = log_firearm_homicide_rate), color = "black", size = 0.2) +
  scale_fill_viridis_c(option = "plasma", name = "Homicide Rate") +
  theme_minimal() +
  labs(
    title = "Firearm Homicide Rate by State",
    fill = "Rate"
  ) +
  facet_wrap(~year)
```
 
From this map, we notice that across the 3 years we seek to observe, its generally true that states along the southern and midwestern parts of the United States have the highest rate of firearm homicide. 
 
This is useful to understand as we can use this inforation to dig deeper into the causes behind negative police behavior. This may help us determine if race is potentially superceded by gun violence in terms of causes for the focus of our study.

#### Combined Regional Dataset

The plot below shows a breakdown of the firearm homicide rates for each region across the years relevant to our analysis.

```{r}
ggplot(combined_regional_ds, 
       aes(
         x = year,
         y = fa_homicide_rate,
         color = region
       )) +
  geom_line() +  # Create a line for each region
  labs(
    title = "Firearm Homicide Rate by Year and Region",
    x = "Year",
    y = "Firearm Homicide Rate"
  ) +
  theme_minimal() +  # Clean theme for the plot
  theme(
    legend.title = element_blank(), 
    legend.position = "bottom"  
  )
```

This shows that like we expected the South region by far had the highest rate of firearm homicides. We may expect to see if there is correlation between this statistic and our variables related to police behavior.

```{r}
# Plot for WHITE_NH_PROP
ggplot(combined_regional_ds, 
       aes(
         x = year,
         y = WHITE_NH_PROP,
         color = region
       )) +
  geom_line() +  # Create a line for each region
  labs(
    title = "Proportion of White Non-Hispanic Population by Year and Region",
    x = "Year",
    y = "Proportion of White Non-Hispanic Population"
  ) +
  theme_minimal() +  # Clean theme for the plot
  theme(
    legend.title = element_blank(), 
    legend.position = "bottom"  
  )

# Plot for B_NH_PROP (Black Non-Hispanic Proportion)
ggplot(combined_regional_ds, 
       aes(
         x = year,
         y = B_NH_PROP,
         color = region
       )) +
  geom_line() +  # Create a line for each region
  labs(
    title = "Proportion of Black Non-Hispanic Population by Year and Region",
    x = "Year",
    y = "Proportion of Black Non-Hispanic Population"
  ) +
  theme_minimal() +  # Clean theme for the plot
  theme(
    legend.title = element_blank(), 
    legend.position = "bottom"  
  )

# Plot for HISPANIC_PROP (Hispanic Population Proportion)
ggplot(combined_regional_ds, 
       aes(
         x = year,
         y = HISPANIC_PROP,
         color = region
       )) +
  geom_line() +  # Create a line for each region
  labs(
    title = "Proportion of Hispanic Population by Year and Region",
    x = "Year",
    y = "Proportion of Hispanic Population"
  ) +
  theme_minimal() +  # Clean theme for the plot
  theme(
    legend.title = element_blank(), 
    legend.position = "bottom"  
  )

# Plot for OTHER_MULTI_NH_PROP (Other/Multi Non-Hispanic Proportion)
ggplot(combined_regional_ds, 
       aes(
         x = year,
         y = OTHER_MULTI_NH_PROP,
         color = region
       )) +
  geom_line() +  # Create a line for each region
  labs(
    title = "Proportion of Other/Multi Non-Hispanic Population by Year and Region",
    x = "Year",
    y = "Proportion of Other/Multi Non-Hispanic Population"
  ) +
  theme_minimal() +  # Clean theme for the plot
  theme(
    legend.title = element_blank(), 
    legend.position = "bottom"  
  )
```

These plots above show the changes in the percentage of each racial group across the three years, which our study spans. We can combine all of the information in these plots by creating a model that will train for a linear relationship between the rates of firearm homicides and the distribution of racial groups for this data. 

```{r}
model <- lm(fa_homicide_rate ~ OTHER_MULTI_NH_PROP + HISPANIC_PROP + B_NH_PROP + WHITE_NH_PROP, combined_regional_ds)

summary(model)
```




This interactive scatter plot shows the Firearm Homicide Rate relative to racial proportions of the 4 regions. Most of the firearm homicides took place in the South, with similar firearm homicide rate in the Midwest and Northeast, and the lowest rate of firearm homicides in the West. Looking at the different scatter plots, we observed that regions with more minorities had higher firearm homicide rate, which could be related to the higher proportion of improper police behavior reported by minorities than by non-minorities.

```{shinylive-r}
#| standalone: true
#| viewerHeight: 640 # You will have to adjust this to fit everything


library(shiny)
library(tidyverse)
options("readr.edition" = 1) # keep this to ensure you can download the data

# Define server logic ----
server <- function(input, output) {
  # Load the data
  data <- read_rds(here::here("dataset", "combined_regional_data.rds"))
  # read_rds("https://github.com/sussmanbu/ma-4615-fa24-final-project-group-7/blob/main/dataset/combined_regional_data.rds")

    # Render the interactive plot
  output$scatterPlot <- renderPlot({
    ggplot(data, aes(x = fa_homicide_rate, y = .data[[input$selected_race]])) +
      geom_point(aes(color = as.factor(year)), size = 2, alpha = 0.7) + # Use color to differentiate years
      geom_text(aes(label = year), vjust = -1, size = 3, alpha = 0.8) + # Add year annotations above points
      facet_wrap(~ region) + # Optional: Facet by region
      labs(
        title = paste("Firearm Homicide Rate vs", input$selected_race),
        x = "Firearm Homicide Rate",
        y = "Proportion",
        color = "Year"
      ) +
      theme_minimal() +
      theme(
        legend.position = "bottom",       # Place legend at the bottom
        legend.box = "horizontal",        # Align legend items horizontally
        legend.text = element_text(size = 10), # Adjust legend text size
        legend.title = element_text(size = 12), # Adjust legend title size
        legend.key.width = unit(1, "cm"), # Add space between legend items
        legend.spacing.x = unit(0.5, "cm") # Increase horizontal spacing
      ) +
      guides(
        color = guide_legend(nrow = 1, byrow = TRUE) # Force a single-row legend
      )
  })
}

# Define UI for the application ----
ui <- fluidPage(
  # Application title
  titlePanel("Interactive Scatter Plot: Firearm Homicide Rate and Racial Proportions"),
  
  # Sidebar layout with input and output
  sidebarLayout(
    # Sidebar panel for inputs
    sidebarPanel(
      # Dropdown menu for selecting racial group
      selectInput(
        inputId = "selected_race",
        label = "Select a Racial Group:",
        choices = c(
          "White NH" = "WHITE_NH_PROP",
          "Black NH" = "B_NH_PROP",
          "Hispanic" = "HISPANIC_PROP",
          "Other/Multi NH" = "OTHER_MULTI_NH_PROP"
        ),
        selected = "WHITE_NH_PROP"
      )
    ),
    
    # Main panel for displaying outputs
    mainPanel(
      plotOutput(outputId = "scatterPlot")
    )
  )
)

# Run the application ----
shinyApp(ui = ui, server = server)
```

