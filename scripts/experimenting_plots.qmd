```{r}
suppressPackageStartupMessages(library(tidyverse))

```



```{r}
filtered <- read_rds("dataset/police_interaction.rds")

```


```{r}
reason_key = c("Accident", "Traffic stop-driver", "Traffic stop-passenger", "Rsp reported crime", "Police assistance", "Police investigation", "Police suspected rsp", "Other reason")
# filtered_reason <- filtered %>%
#  count(RACE , wt = reason_key, name = "ny")
# filtered |>
#   group_by(RACE) |>
#   filter(REASON > 0) |>
#   mutate(
#     reason_text = reason_key[REASON + 1] 
#   ) |>
#   ggplot(aes(x = REASON, fill = reason_text)) +
#     geom_bar(show.legend = TRUE) +
#     theme_minimal() +
#   facet_wrap(~RACE) 
filtered |>
  filter(REASON > 0) |>
ggplot(aes(x = as.factor(REASON), fill = as.factor(RACE)))+
  geom_bar(position = "fill") + 
  labs(title = "Proportion of Reasons for Traffic Stop by Race", x = "Reason: \n1 = Accident\n2 = Traffic stop-driver\n3 = Traffic stop-passenger\n4 = Rsp reported crime\n5 = Police assistance\n6 = Police investigation\n7 = Police suspected rsp\n8 = Other reason", y = "Proportion", fill = "Race") 
  #scale_fill_discrete(name = "Race")

 # ggplot(aes(x = REASON, y = after_stat(prop), fill = reason_text, group = reason_text)) +
 #    geom_bar(show.legend = TRUE, color = "black", position = "dodge") +
 #    theme_minimal() +
#  theme(legend = element_text("Reason for traffic stop"))

  #theme(legend.title = element_text(hjust = 1))

```


```{r}
ggplot(filtered, aes(x = as.factor(ARRESTED), fill = as.factor(RACE))) +
  geom_bar(position = "fill") +
  labs(title = "Proportion of Arrests by Race", x = "Arrested (0 = No, 1 = Yes)", y = "Proportion", fill = "Race")



```


```{r}

ggplot(filtered, aes(x = as.factor(CONTACT), fill = as.factor(RACE))) +
  geom_bar(position = "fill") +
  labs(title = "Proportion of Race by Police Contact", x = "Police Contact", y = "Proportion", fill = "Race") +
  scale_x_discrete(labels = c("0" = "No", "1" = "Yes")) +
  scale_y_continuous(labels = scales::percent)

```

<<<<<<< HEAD
```{r}
library(tidymodels)
split <- initial_split(filtered, prop = .8) #good way to keep yourself honest. splits it by prop % being in training, 1-prop being test
training<- training(split)
mod1 <- lm(PROPER ~ C4_RACE, filtered)
summary(mod1)
# filtered |>
#   # ggplot(aes(x = C4_RACE, y = PROPER)) +
#   # geom_quantile()
#   
#   ggplot(aes(x = C4_RACE, y = PROPER)) +
#   geom_
```